import 'package:flutter_test/flutter_test.dart';

import 'programs.dart';

const state16C = [
  '''{
    "comments": null,
    "version": 1,
    "settings": {
        "menuEnabled": false,
        "windowEnabled": true,
        "euroComma": false,
        "hideComplement": false,
        "showWordSize": false,
        "showAccelerators": false,
        "systemOverlaysDisabled": false,
        "orientation": 0,
        "traceProgramToStdout": false
    },
    "displayMode": "f4",
    "integerSignMode": "2",
    "wordSize": 56,
    "stack": [
        "1234567898000",
        "1234567898000",
        "1234567890000",
        "1234567890000"
    ],
    "lastX": "0",
    "flags": [
        false,
        false,
        false,
        false,
        false,
        false
    ],
    "memory": {
        "storage": "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9ca",
        "program": {
            "lines": 203,
            "currentLine": 0,
            "returnStack": [
                0,
                0,
                0,
                0
            ],
            "returnStackPos": -1
        },
        "I": "0"
    }
}''',
  '''{
    "comments": null,
    "version": 1,
    "settings": {
        "menuEnabled": false,
        "windowEnabled": true,
        "euroComma": false,
        "hideComplement": false,
        "showWordSize": false,
        "showAccelerators": false,
        "systemOverlaysDisabled": false,
        "orientation": 0,
        "traceProgramToStdout": false
    },
    "displayMode": "f4",
    "integerSignMode": "2",
    "wordSize": 56,
    "stack": [
        "1234567898000",
        "1234567898000",
        "1234567890000",
        "1234567890000"
    ],
    "lastX": "0",
    "flags": [
        false,
        false,
        false,
        false,
        false,
        false
    ],
    "memory": {
        "storage": "c0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495",
        "program": {
            "lines": 53,
            "currentLine": 0,
            "returnStack": [
                0,
                0,
                0,
                0
            ],
            "returnStackPos": -1
        },
        "I": "0"
    }
}'''
];

const listing16C = [
  [
    '   000 {          } ',
    '   001 {        0 } 0',
    '   002 {        1 } 1',
    '   003 {        2 } 2',
    '   004 {        3 } 3',
    '   005 {        4 } 4',
    '   006 {        5 } 5',
    '   007 {        6 } 6',
    '   008 {        7 } 7',
    '   009 {        8 } 8',
    '   010 {        9 } 9',
    '   011 {        A } A',
    '   012 {        B } B',
    '   013 {        C } C',
    '   014 {        D } D',
    '   015 {        E } E',
    '   016 {        F } F',
    '   017 {    42  A } SL',
    '   018 {    43  A } LJ',
    '   019 {    42  B } SR',
    '   020 {    43  B } ASR',
    '   021 {    42  C } RL',
    '   022 {    43  C } RLC',
    '   023 {    42  D } RR',
    '   024 {    43  D } RRC',
    '   025 {    42  E } RLn',
    '   026 {    43  E } RLCn',
    '   027 {    42  F } RRn',
    '   028 {    43  F } RRCn',
    '   029 {    42  7 } MASKL',
    '   030 {    43  7 } #B',
    '   031 {    42  8 } MASKR',
    '   032 {    43  8 } ABS',
    '   033 {    42  9 } RMD',
    '   034 {    43  9 } DBLR',
    '   035 {       10 } /',
    '   036 {    42 10 } XOR',
    '   037 {    43 10 } DBL/',
    '   038 {    21  0 } GSB 0',
    '   039 {    21  1 } GSB 1',
    '   040 {    21  2 } GSB 2',
    '   041 {    21  3 } GSB 3',
    '   042 {    21  4 } GSB 4',
    '   043 {    21  5 } GSB 5',
    '   044 {    21  6 } GSB 6',
    '   045 {    21  7 } GSB 7',
    '   046 {    21  8 } GSB 8',
    '   047 {    21  9 } GSB 9',
    '   048 {    21  A } GSB A',
    '   049 {    21  B } GSB B',
    '   050 {    21  C } GSB C',
    '   051 {    21  D } GSB D',
    '   052 {    21  E } GSB E',
    '   053 {    21  F } GSB F',
    '   054 {    21 31 } GSB (i)',
    '   055 {    21 32 } GSB I',
    '   056 {    42 21 } x<=>(i)',
    '   057 {    43 21 } RTN',
    '   058 {    22  0 } GTO 0',
    '   059 {    22  1 } GTO 1',
    '   060 {    22  2 } GTO 2',
    '   061 {    22  3 } GTO 3',
    '   062 {    22  4 } GTO 4',
    '   063 {    22  5 } GTO 5',
    '   064 {    22  6 } GTO 6',
    '   065 {    22  7 } GTO 7',
    '   066 {    22  8 } GTO 8',
    '   067 {    22  9 } GTO 9',
    '   068 {    22  A } GTO A',
    '   069 {    22  B } GTO B',
    '   070 {    22  C } GTO C',
    '   071 {    22  D } GTO D',
    '   072 {    22  E } GTO E',
    '   073 {    22  F } GTO F',
    '   074 {    22 31 } GTO (i)',
    '   075 {    22 32 } GTO I',
    '   076 {    42 22 } x<=>I',
    '   077 { 43 22  0 } LBL 0',
    '   078 { 43 22  1 } LBL 1',
    '   079 { 43 22  2 } LBL 2',
    '   080 { 43 22  3 } LBL 3',
    '   081 { 43 22  4 } LBL 4',
    '   082 { 43 22  5 } LBL 5',
    '   083 { 43 22  6 } LBL 6',
    '   084 { 43 22  7 } LBL 7',
    '   085 { 43 22  8 } LBL 8',
    '   086 { 43 22  9 } LBL 9',
    '   087 { 43 22  A } LBL A',
    '   088 { 43 22  B } LBL B',
    '   089 { 43 22  C } LBL C',
    '   090 { 43 22  D } LBL D',
    '   091 { 43 22  E } LBL E',
    '   092 { 43 22  F } LBL F',
    '   093 {       23 } HEX',
    '   094 {    42 23 } SHOW HEX',
    '   095 {    43 23 } DSZ',
    '   096 {       24 } DEC',
    '   097 {    42 24 } SHOW DEC',
    '   098 {    43 24 } ISZ',
    '   099 {       25 } OCT',
    '   100 {    42 25 } SHOW OCT',
    '   101 {    43 25 } sqrt(x)',
    '   102 {       26 } BIN',
    '   103 {    42 26 } SHOW BIN',
    '   104 {    43 26 } 1/x',
    '   105 {    42  4 } SB',
    '   106 { 43  4  0 } SF 0',
    '   107 { 43  4  1 } SF 1',
    '   108 { 43  4  2 } SF 2',
    '   109 { 43  4  3 } SF 3',
    '   110 { 43  4  4 } SF 4',
    '   111 { 43  4  5 } SF 5',
    '   112 {    42  5 } CB',
    '   113 { 43  5  0 } CF 0',
    '   114 { 43  5  1 } CF 1',
    '   115 { 43  5  2 } CF 2',
    '   116 { 43  5  3 } CF 3',
    '   117 { 43  5  4 } CF 4',
    '   118 { 43  5  5 } CF 5',
    '   119 {    42  6 } B?',
    '   120 { 43  6  0 } F? 0',
    '   121 { 43  6  1 } F? 1',
    '   122 { 43  6  2 } F? 2',
    '   123 { 43  6  3 } F? 3',
    '   124 { 43  6  4 } F? 4',
    '   125 { 43  6  5 } F? 5',
    '   126 {       20 } *',
    '   127 {    42 20 } AND',
    '   128 {    43 20 } DBLx',
    '   129 {       31 } R/S',
    '   130 {       33 } Rv',
    '   131 {    43 33 } R^',
    '   132 {       34 } X<=>Y',
    '   133 {    42 34 } CLEAR REG',
    '   134 {    43 34 } PSE',
    '   135 {    43 35 } CLx',
    '   136 {       36 } ENTER',
    '   137 { 42 36  0 } WINDOW 0',
    '   138 { 42 36  1 } WINDOW 1',
    '   139 { 42 36  2 } WINDOW 2',
    '   140 { 42 36  3 } WINDOW 3',
    '   141 { 42 36  4 } WINDOW 4',
    '   142 { 42 36  5 } WINDOW 5',
    '   143 { 42 36  6 } WINDOW 6',
    '   144 { 42 36  7 } WINDOW 7',
    '   145 {    43 36 } LSTx',
    '   146 {    42  1 } 1\'s',
    '   147 {    43  1 } x<=y',
    '   148 {    42  2 } 2\'s',
    '   149 {    43  2 } x<0',
    '   150 {    42  3 } UNSGN',
    '   151 {    43  3 } x>y',
    '   152 {       30 } -',
    '   153 {    42 30 } NOT',
    '   154 {    43 30 } x>0',
    '   155 {    44  0 } STO 0',
    '   156 {    44  1 } STO 1',
    '   157 {    44  2 } STO 2',
    '   158 {    44  3 } STO 3',
    '   159 {    44  4 } STO 4',
    '   160 {    44  5 } STO 5',
    '   161 {    44  6 } STO 6',
    '   162 {    44  7 } STO 7',
    '   163 {    44  8 } STO 8',
    '   164 {    44  9 } STO 9',
    '   165 {    44  A } STO A',
    '   166 {    44  B } STO B',
    '   167 {    44  C } STO C',
    '   168 {    44  D } STO D',
    '   169 {    44  E } STO E',
    '   170 {    44  F } STO F',
    '   171 {    44 .0 } STO 10',
    '   172 {    44 .1 } STO 11',
    '   173 {    44 .2 } STO 12',
    '   174 {    44 .3 } STO 13',
    '   175 {    44 .4 } STO 14',
    '   176 {    44 .5 } STO 15',
    '   177 {    44 .6 } STO 16',
    '   178 {    44 .7 } STO 17',
    '   179 {    44 .8 } STO 18',
    '   180 {    44 .9 } STO 19',
    '   181 {    44 .A } STO 1A',
    '   182 {    44 .B } STO 1B',
    '   183 {    44 .C } STO 1C',
    '   184 {    44 .D } STO 1D',
    '   185 {    44 .E } STO 1E',
    '   186 {    44 .F } STO 1F',
    '   187 {    44 31 } STO (i)',
    '   188 {    44 32 } STO I',
    '   189 {    42 44 } WSIZE',
    '   190 {    43 44 } <',
    '   191 {    45  0 } RCL 0',
    '   192 {    45  1 } RCL 1',
    '   193 {    45  2 } RCL 2',
    '   194 {    45  3 } RCL 3',
    '   195 {    45  4 } RCL 4',
    '   196 {    45  5 } RCL 5',
    '   197 {    45  6 } RCL 6',
    '   198 {    45  7 } RCL 7',
    '   199 {    45  8 } RCL 8',
    '   200 {    45  9 } RCL 9',
    '   201 {    45  A } RCL A',
    '   202 {    45  B } RCL B',
    '   203 {    45  C } RCL C'
  ],
  [
    '   000 {          } ',
    '   001 {    45  2 } RCL 2',
    '   002 {    45  3 } RCL 3',
    '   003 {    45  4 } RCL 4',
    '   004 {    45  5 } RCL 5',
    '   005 {    45  6 } RCL 6',
    '   006 {    45  7 } RCL 7',
    '   007 {    45  8 } RCL 8',
    '   008 {    45  9 } RCL 9',
    '   009 {    45  A } RCL A',
    '   010 {    45  B } RCL B',
    '   011 {    45  C } RCL C',
    '   012 {    45  D } RCL D',
    '   013 {    45  E } RCL E',
    '   014 {    45  F } RCL F',
    '   015 {    45 .0 } RCL 10',
    '   016 {    45 .1 } RCL 11',
    '   017 {    45 .2 } RCL 12',
    '   018 {    45 .3 } RCL 13',
    '   019 {    45 .4 } RCL 14',
    '   020 {    45 .5 } RCL 15',
    '   021 {    45 .6 } RCL 16',
    '   022 {    45 .7 } RCL 17',
    '   023 {    45 .8 } RCL 18',
    '   024 {    45 .9 } RCL 19',
    '   025 {    45 .A } RCL 1A',
    '   026 {    45 .B } RCL 1B',
    '   027 {    45 .C } RCL 1C',
    '   028 {    45 .D } RCL 1D',
    '   029 {    45 .E } RCL 1E',
    '   030 {    45 .F } RCL 1F',
    '   031 {    45 31 } RCL (i)',
    '   032 {    45 32 } RCL I',
    '   033 { 42 45  0 } FLOAT 0',
    '   034 { 42 45  1 } FLOAT 1',
    '   035 { 42 45  2 } FLOAT 2',
    '   036 { 42 45  3 } FLOAT 3',
    '   037 { 42 45  4 } FLOAT 4',
    '   038 { 42 45  5 } FLOAT 5',
    '   039 { 42 45  6 } FLOAT 6',
    '   040 { 42 45  7 } FLOAT 7',
    '   041 { 42 45  8 } FLOAT 8',
    '   042 { 42 45  9 } FLOAT 9',
    '   043 { 42 45 48 } FLOAT .',
    '   044 {    43 45 } >',
    '   045 {    43  0 } x!=y',
    '   046 {       48 } .',
    '   047 {    43 48 } x!=0',
    '   048 {       49 } CHS',
    '   049 {    42 49 } EEX',
    '   050 {    43 49 } x==y',
    '   051 {       40 } +',
    '   052 {    42 40 } OR',
    '   053 {    43 40 } x==0'
  ]
];

Future<void> opcodeTest16C() async {
  expect(state16C.length, listing16C.length);
  for (int i = 0; i < state16C.length; i++) {
    final String src = state16C[i];
    final c = TestCalculator()..loadStateFromString(src);
    final resultProgram = c.model.program.listing;
    expect(resultProgram.isNotEmpty, true);
    expect(resultProgram, listing16C[i]);
    final toImport = StringBuffer();
    toImport.writeln('# a comment');
    toImport.writeln();
    for (final line in listing16C[i]) {
      toImport.writeln(line);
    }
    c.model.program.importProgram(toImport.toString());
    expect(c.model.program.listing, listing16C[i]);
  }
}
