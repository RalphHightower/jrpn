// ignore_for_file: file_names, non_constant_identifier_names

import 'dart:convert';

import 'package:flutter_test/flutter_test.dart';

import 'programs.dart';

/*
 The variable SEQ_2_CODE is derived from DM15.tcl in
 https://hp15c.com/, which is:

#------------------------------------------------------------------------------
#
#                  DM-15 Package for the HP-15C Simulator
#
#                        (c) 2012-2023 Torsten Manz
#
#------------------------------------------------------------------------------
#
#This program is free software; you can redistribute it and/or modify it under
#the terms of the GNU General Public License as published by the Free Software
#Foundation; either version 3 of the License, or (at your option) any later
#version.
#
#This program is distributed in the hope that it will be useful, but WITHOUT
#ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License along with
#this program; if not, see <https://www.gnu.org/licenses/>
#
#------------------------------------------------------------------------------

*/

final SEQ_2_CODE = [
  ['([0-9])', 'f[0-9]'],
  ['10', 'fd'],
  ['11', 'ca'],
  ['12', 'cb'],
  ['13', 'cc'],
  ['14', 'cd'],
  ['15', 'ce'],
  ['16', 'c3'],
  ['20', 'fc'],
  ['22_([0-9])', '1[0-9]'],
  ['22_1([1-5])', '1[a-e]'],
  ['22_25', '88'],
  ['22_48_([0-9])', 'ff1[0-9]'],
  ['23', 'c7'],
  ['24', 'c8'],
  ['25', 'c9'],
  ['26', 'c6'],
  ['21', '""'],
  ['22_16_([0-9])', '""'],
  ['30', 'fb'],
  ['31', 'c2'],
  ['32_([0-9])', '2[0-9]'],
  ['32_1([1-5])', '2[a-e]'],
  ['32_25', '89'],
  ['32_48_([0-9])', 'ff2[0-9]'],
  ['33', 'c4'],
  ['34', 'c5'],
  ['35', '""'],
  ['36', 'c1'],
  ['40', 'fa'],
  ['41', '""'],
  ['48', 'c0'],
  ['49', 'fe'],
  ['42_0', 'd0'],
  ['42_1', 'd1'],
  ['42_2', 'd2'],
  ['42_3', 'd3'],
  ['42_4_0', '80'],
  ['42_4_1', '90'],
  ['42_4_([2-9])', 'ef5[2-9]'],
  ['42_4_1([1-5])', 'ef5[a-e]'],
  ['42_4_24', '81'],
  ['42_4_25', '91'],
  ['42_4_48_([0-9])', 'ef6[0-9]'],
  ['42_5_0', '82'],
  ['42_5_1', '92'],
  ['42_5_([2-9])', 'ef7[2-9]'],
  ['42_5_1([1-5])', 'ef7[a-e]'],
  ['42_5_24', '83'],
  ['42_5_25', '93'],
  ['42_5_48_([0-9])', 'ef8[0-9]'],
  ['42_6_0', '84'],
  ['42_6_1', '94'],
  ['42_6_([2-9])', 'ef9[2-9]'],
  ['42_6_1([1-5])', 'ef9[a-e]'],
  ['42_6_24', '85'],
  ['42_6_25', '95'],
  ['42_6_48_([0-9])', 'efa[0-9]'],
  ['42_7_([0-9])', 'ff6[0-9]'],
  ['42_7_25', 'ff6e'],
  ['42_8_([0-9])', 'ff7[0-9]'],
  ['42_8_25', 'ff7e'],
  ['42_9_([0-9])', 'ff8[0-9]'],
  ['42_9_25', 'ff8e'],
  ['42_10_([0-9])', 'ef1[0-9]'],
  ['42_10_1([1-5])', 'ef1[a-e]'],
  ['42_10_48_([0-9])', 'ef2[0-9]'],
  ['42_16_([0-9])', 'ff9[0-9]'],
  ['42_20_([0-9])', 'ef3[0-9]'],
  ['42_20_1([1-5])', 'ef3[a-e]'],
  ['42_20_48_([0-9])', 'ef4[0-9]'],
  ['42_21_([0-9])', '0[0-9]'],
  ['42_21_1([1-5])', '0[a-e]'],
  ['42_21_48_([0-9])', 'ff0[0-9]'],
  ['42_22_23', 'd4'],
  ['42_22_24', 'd5'],
  ['42_22_25', 'd6'],
  ['42_23_1([1-5])', '9[a-e]'],
  ['42_23_24', '98'],
  ['42_23_25', '99'],
  ['42_24', '""'],
  ['42_25', 'a4'],
  ['42_26_1([1-5])', '8[a-e]'],
  ['42_30', 'db'],
  ['42_31', 'dc'],
  ['42_32', 'dd'],
  ['42_33', '""'],
  ['42_34', 'a5'],
  ['42_35', '""'],
  ['42_36', 'a1'],
  ['42_40', 'da'],
  ['42_44', 'a3'],
  ['42_45', '""'],
  ['42_48', 'a0'],
  ['42_49', 'de'],
  ['43_0', 'e0'],
  ['43_1', 'e1'],
  ['43_2', 'e2'],
  ['43_3', 'e3'],
  ['43_4_([0-9])', 'ff3[0-9]'],
  ['43_4_25', 'ff3e'],
  ['43_5_([0-9])', 'ff4[0-9]'],
  ['43_5_25', 'ff4e'],
  ['43_6_([0-9])', 'ff5[0-9]'],
  ['43_6_25', 'ff5e'],
  ['43_7', 'e7'],
  ['43_8', 'e8'],
  ['43_9', 'e9'],
  ['43_10', 'ed'],
  ['43_11', 'ba'],
  ['43_12', 'bb'],
  ['43_13', 'bc'],
  ['43_14', 'bd'],
  ['43_15', 'be'],
  ['43_16', 'b3'],
  ['43_20', 'ec'],
  ['43_21', '""'],
  ['43_22_23', 'e4'],
  ['43_22_24', 'e5'],
  ['43_22_25', 'e6'],
  ['43_23', 'b7'],
  ['43_24', 'b8'],
  ['43_25', 'b9'],
  ['43_26', 'b6'],
  ['43_30_([0-9])', '7[0-9]'],
  ['43_31', '""'],
  ['43_32', 'b2'],
  ['43_33', 'b4'],
  ['43_34', 'b5'],
  ['43_35', 'a2'],
  ['43_36', 'b1'],
  ['43_40', 'ea'],
  ['43_44', 'eb'],
  ['43_45', '""'],
  ['43_48', 'b0'],
  ['43_49', 'ee'],
  ['44_([0-9])', '4[0-9]'],
  ['44_10_([0-9])', 'dfe[0-9]'],
  ['44_10_1([1-5])', 'dfe[a-e]'],
  ['44_10_24', 'dffd'],
  ['44_10_25', 'dffe'],
  ['44_10_48_([0-9])', 'dff[0-9]'],
  ['44_1([1-5])', '4[a-e]'],
  ['44_1([1-5])_u', 'bf4[a-e]'],
  ['44_16_1([1-5])', 'ffa[a-e]'],
  ['44_20_([0-9])', 'dfc[0-9]'],
  ['44_20_1([1-5])', 'dfc[a-e]'],
  ['44_20_24', 'dfdd'],
  ['44_20_25', 'dfde'],
  ['44_20_48_([0-9])', 'dfd[0-9]'],
  ['44_24', '96'],
  ['44_24_u', 'bf96'],
  ['44_25', '97'],
  ['44_26', 'a6'],
  ['44_30_([0-9])', 'dfa[0-9]'],
  ['44_30_1([1-5])', 'dfa[a-e]'],
  ['44_30_24', 'dfbd'],
  ['44_30_25', 'dfbe'],
  ['44_30_48_([0-9])', 'dfb[0-9]'],
  ['44_36', 'd9'],
  ['44_42_36', 'd9'],
  ['44_40_([0-9])', 'df8[0-9]'],
  ['44_40_1([1-5])', 'df8[a-e]'],
  ['44_40_24', 'df9d'],
  ['44_40_25', 'df9e'],
  ['44_40_48_([0-9])', 'df9[0-9]'],
  ['44_43_1([1-5])', '6[a-e]'],
  ['44_43_24', 'af6d'],
  ['44_48_([0-9])', '6[0-9]'],
  ['45_([0-9])', '3[0-9]'],
  ['45_10_([0-9])', 'cfe[0-9]'],
  ['45_10_1([1-5])', 'cfe[a-e]'],
  ['45_10_24', 'cffd'],
  ['45_10_25', 'cffe'],
  ['45_10_48_([0-9])', 'cff[0-9]'],
  ['45_1([1-5])', '3[a-e]'],
  ['45_1([1-5])_u', 'bf3[a-e]'],
  ['45_16_1([1-5])', '7[a-e]'],
  ['45_20_([0-9])', 'cfc[0-9]'],
  ['45_20_1([1-5])', 'cfc[a-e]'],
  ['45_20_24', 'cfdd'],
  ['45_20_25', 'cfde'],
  ['45_20_48_([0-9])', 'cfd[0-9]'],
  ['45_23_1([1-5])', 'a[a-e]'],
  ['45_23_24', 'a8'],
  ['45_23_25', 'a9'],
  ['45_24', '86'],
  ['45_24_u', 'bf86'],
  ['45_25', '87'],
  ['45_26', 'd7'],
  ['45_30_([0-9])', 'cfa[0-9]'],
  ['45_30_1([1-5])', 'cfa[a-e]'],
  ['45_30_24', 'cfbd'],
  ['45_30_25', 'cfbe'],
  ['45_30_48_([0-9])', 'cfb[0-9]'],
  ['45_36', 'd8'],
  ['45_40_([0-9])', 'cf8[0-9]'],
  ['45_40_1([1-5])', 'cf8[a-e]'],
  ['45_40_24', 'cf9d'],
  ['45_40_25', 'cf9e'],
  ['45_40_48_([0-9])', 'cf9[0-9]'],
  ['45_43_1([1-5])', '5[a-e]'],
  ['45_43_24', 'af5d'],
  ['45_48_([0-9])', '5[0-9]'],
  ['45_49', 'a7'],
];

const expectedOpcodes = [
  [0, "-     0", "0"],
  [1, "-     1", "1"],
  [2, "-     2", "2"],
  [3, "-     3", "3"],
  [4, "-     4", "4"],
  [5, "-     5", "5"],
  [6, "-     6", "6"],
  [7, "-     7", "7"],
  [8, "-     8", "8"],
  [9, "-     9", "9"],
  [10, "-    11", "sqrt(x)"],
  [11, "- 43 11", "x^2"],
  [12, "-    12", "eX"],
  [13, "- 43 12", "ln"],
  [14, "-    13", "10^x"],
  [15, "- 43 13", "log"],
  [16, "-    14", "yX"],
  [17, "- 43 14", "%"],
  [18, "-    15", "1/x"],
  [19, "- 43 15", "delta%"],
  [20, "-    16", "CHS"],
  [21, "- 43 16", "ABS"],
  [22, "- 43  7", "DEG"],
  [23, "- 43  8", "RAD"],
  [24, "- 43  9", "GRD"],
  [25, "-    10", "/"],
  [26, "- 43 10", "x<=y"],
  [27, "-42,21,11", "LBL A"],
  [28, "-42,21,12", "LBL B"],
  [29, "-42,21,13", "LBL C"],
  [30, "-42,21,14", "LBL D"],
  [31, "-42,21,15", "LBL E"],
  [32, "-42,21, 0", "LBL 0"],
  [33, "-42,21, 1", "LBL 1"],
  [34, "-42,21, 2", "LBL 2"],
  [35, "-42,21, 3", "LBL 3"],
  [36, "-42,21, 4", "LBL 4"],
  [37, "-42,21, 5", "LBL 5"],
  [38, "-42,21, 6", "LBL 6"],
  [39, "-42,21, 7", "LBL 7"],
  [40, "-42,21, 8", "LBL 8"],
  [41, "-42,21, 9", "LBL 9"],
  [42, "- 22 25", "GTO I"],
  [43, "- 22 11", "GTO A"],
  [44, "- 22 12", "GTO B"],
  [45, "- 22 13", "GTO C"],
  [46, "- 22 14", "GTO D"],
  [47, "- 22 15", "GTO E"],
  [48, "- 22  0", "GTO 0"],
  [49, "- 22  1", "GTO 1"],
  [50, "- 22  2", "GTO 2"],
  [51, "- 22  3", "GTO 3"],
  [52, "- 22  4", "GTO 4"],
  [53, "- 22  5", "GTO 5"],
  [54, "- 22  6", "GTO 6"],
  [55, "- 22  7", "GTO 7"],
  [56, "- 22  8", "GTO 8"],
  [57, "- 22  9", "GTO 9"],
  [58, "-    23", "SIN"],
  [59, "-42,23,11", "DIM A"],
  [60, "-42,23,12", "DIM B"],
  [61, "-42,23,13", "DIM C"],
  [62, "-42,23,14", "DIM D"],
  [63, "-42,23,15", "DIM E"],
  [64, "-42,23,25", "DIM I"],
  [65, "-42,23,24", "DIM (i)"],
  [66, "- 43 23", "SIN-1"],
  [67, "-42,22,23", "SINH"],
  [68, "-43,22,23", "SINH-1"],
  [69, "-    24", "COS"],
  [70, "- 43 24", "COS-1"],
  [71, "-42,22,24", "COSH"],
  [72, "-43,22,24", "COSH-1"],
  [73, "-    25", "TAN"],
  [74, "- 42 25", "I"],
  [75, "- 43 25", "TAN-1"],
  [76, "-42,22,25", "TANH"],
  [77, "-43,22,25", "TANH-1"],
  [78, "-    26", "EEX"],
  [79, "-42,26,11", "RESULT A"],
  [80, "-42,26,12", "RESULT B"],
  [81, "-42,26,13", "RESULT C"],
  [82, "-42,26,14", "RESULT D"],
  [83, "-42,26,15", "RESULT E"],
  [84, "- 43 26", "PI"],
  [85, "-42, 4,24", "x<-> (i)"],
  [86, "-42, 4,25", "x<-> I"],
  [87, "-42, 4, 0", "x<-> 0"],
  [88, "-42, 4, 1", "x<-> 1"],
  [89, "-42, 5,24", "DSE (i)"],
  [90, "-42, 5,25", "DSE I"],
  [91, "-42, 5, 0", "DSE 0"],
  [92, "-42, 5, 1", "DSE 1"],
  [93, "-42, 6,24", "ISG (i)"],
  [94, "-42, 6,25", "ISG I"],
  [95, "-42, 6, 0", "ISG 0"],
  [96, "-42, 6, 1", "ISG 1"],
  [97, "-    20", "*"],
  [98, "- 43 20", "x==0"],
  [99, "-    31", "R/S"],
  [100, "- 42 31", "PSE"],
  [101, "- 32 25", "GSB I"],
  [102, "- 32 11", "GSB A"],
  [103, "- 32 12", "GSB B"],
  [104, "- 32 13", "GSB C"],
  [105, "- 32 14", "GSB D"],
  [106, "- 32 15", "GSB E"],
  [107, "- 32  0", "GSB 0"],
  [108, "- 32  1", "GSB 1"],
  [109, "- 32  2", "GSB 2"],
  [110, "- 32  3", "GSB 3"],
  [111, "- 32  4", "GSB 4"],
  [112, "- 32  5", "GSB 5"],
  [113, "- 32  6", "GSB 6"],
  [114, "- 32  7", "GSB 7"],
  [115, "- 32  8", "GSB 8"],
  [116, "- 32  9", "GSB 9"],
  [117, "- 42 32", "CLEAR-E"],
  [118, "- 43 32", "RTN"],
  [119, "-    33", "Rv"],
  [120, "- 43 33", "R^"],
  [121, "-    34", "X<=>Y"],
  [122, "- 42 34", "CLEAR REG"],
  [123, "- 43 34", "RND"],
  [124, "- 43 35", "CLx"],
  [125, "-    36", "ENTER"],
  [126, "- 42 36", "RAN #"],
  [127, "- 43 36", "LSTx"],
  [128, "- 42  1", "->R"],
  [129, "- 43  1", "->P"],
  [130, "- 42  2", "->H.MS"],
  [131, "- 43  2", "->H"],
  [132, "- 42  3", "->RAD"],
  [133, "- 43  3", "->DEG"],
  [134, "-    30", "-"],
  [135, "- 42 30", "Re<=>Im"],
  [136, "-43,30, 0", "TEST 0"],
  [137, "-43,30, 1", "TEST 1"],
  [138, "-43,30, 2", "TEST 2"],
  [139, "-43,30, 3", "TEST 3"],
  [140, "-43,30, 4", "TEST 4"],
  [141, "-43,30, 5", "TEST 5"],
  [142, "-43,30, 6", "TEST 6"],
  [143, "-43,30, 7", "TEST 7"],
  [144, "-43,30, 8", "TEST 8"],
  [145, "-43,30, 9", "TEST 9"],
  [146, "- 44  0", "STO 0"],
  [147, "- 44  1", "STO 1"],
  [148, "- 44  2", "STO 2"],
  [149, "- 44  3", "STO 3"],
  [150, "- 44  4", "STO 4"],
  [151, "- 44  5", "STO 5"],
  [152, "- 44  6", "STO 6"],
  [153, "- 44  7", "STO 7"],
  [154, "- 44  8", "STO 8"],
  [155, "- 44  9", "STO 9"],
  [156, "- 44  .0", "STO 10"],
  [157, "- 44  .1", "STO 11"],
  [158, "- 44  .2", "STO 12"],
  [159, "- 44  .3", "STO 13"],
  [160, "- 44  .4", "STO 14"],
  [161, "- 44  .5", "STO 15"],
  [162, "- 44  .6", "STO 16"],
  [163, "- 44  .7", "STO 17"],
  [164, "- 44  .8", "STO 18"],
  [165, "- 44  .9", "STO 19"],
  [166, "- 44 25", "STO I"],
  [167, "- 44 36", "STO 36"],
  [168, "- 44 26", "STO 26"],
  [169, "- 44,43,11", "STO g A"],
  [170, "- 44,43,12", "STO g B"],
  [171, "- 44,43,13", "STO g C"],
  [172, "- 44,43,14", "STO g D"],
  [173, "- 44,43,15", "STO g E"],
  [174, "- 44 11", "STO A"],
  [175, "- 44 12", "STO B"],
  [176, "- 44 13", "STO C"],
  [177, "- 44 14", "STO D"],
  [178, "- 44 15", "STO E"],
  [179, "- 44 24", "STO (i)"],
  [180, "- 42 44", "FRAC"],
  [181, "- 43 44", "INT"],
  [182, "- 45  0", "RCL 0"],
  [183, "- 45  1", "RCL 1"],
  [184, "- 45  2", "RCL 2"],
  [185, "- 45  3", "RCL 3"],
  [186, "- 45  4", "RCL 4"],
  [187, "- 45  5", "RCL 5"],
  [188, "- 45  6", "RCL 6"],
  [189, "- 45  7", "RCL 7"],
  [190, "- 45  8", "RCL 8"],
  [191, "- 45  9", "RCL 9"],
  [192, "- 45  .0", "RCL 10"],
  [193, "- 45  .1", "RCL 11"],
  [194, "- 45  .2", "RCL 12"],
  [195, "- 45  .3", "RCL 13"],
  [196, "- 45  .4", "RCL 14"],
  [197, "- 45  .5", "RCL 15"],
  [198, "- 45  .6", "RCL 16"],
  [199, "- 45  .7", "RCL 17"],
  [200, "- 45  .8", "RCL 18"],
  [201, "- 45  .9", "RCL 19"],
  [202, "- 45 25", "RCL I"],
  [203, "- 45 36", "RCL 36"],
  [204, "- 45,43,11", "RCL g A"],
  [205, "- 45,43,12", "RCL g B"],
  [206, "- 45,43,13", "RCL g C"],
  [207, "- 45,43,14", "RCL g D"],
  [208, "- 45,43,15", "RCL g E"],
  [209, "- 45 49", "RCL 49"],
  [210, "-45,23,11", "RCL DIM A"],
  [211, "-45,23,12", "RCL DIM B"],
  [212, "-45,23,13", "RCL DIM C"],
  [213, "-45,23,14", "RCL DIM D"],
  [214, "-45,23,15", "RCL DIM E"],
  [215, "-45,23,25", "RCL DIM I"],
  [216, "-45,23,24", "RCL DIM (i)"],
  [217, "- 45 26", "RCL 26"],
  [218, "-45,16,11", "RCL MATRIX A"],
  [219, "-45,16,12", "RCL MATRIX B"],
  [220, "-45,16,13", "RCL MATRIX C"],
  [221, "-45,16,14", "RCL MATRIX D"],
  [222, "-45,16,15", "RCL MATRIX E"],
  [223, "- 45 11", "RCL A"],
  [224, "- 45 12", "RCL B"],
  [225, "- 45 13", "RCL C"],
  [226, "- 45 14", "RCL D"],
  [227, "- 45 15", "RCL E"],
  [228, "- 45 24", "RCL (i)"],
  [229, "- 42  0", "x!"],
  [230, "- 43  0", "xBar"],
  [231, "-    48", "."],
  [232, "- 42 48", "yHat,r"],
  [233, "- 43 48", "s"],
  [234, "-    49", "E+"],
  [235, "- 42 49", "L.R."],
  [236, "- 43 49", "E-"],
  [237, "-    40", "+"],
  [238, "- 42 40", "Py,x"],
  [239, "- 43 40", "Cy,x"],
  [256, "-42,16, 0", "MATRIX 0"],
  [257, "-42,16, 1", "MATRIX 1"],
  [258, "-42,16, 2", "MATRIX 2"],
  [259, "-42,16, 3", "MATRIX 3"],
  [260, "-42,16, 4", "MATRIX 4"],
  [261, "-42,16, 5", "MATRIX 5"],
  [262, "-42,16, 6", "MATRIX 6"],
  [263, "-42,16, 7", "MATRIX 7"],
  [264, "-42,16, 8", "MATRIX 8"],
  [265, "-42,16, 9", "MATRIX 9"],
  [266, "-42, 7, 0", "FIX 0"],
  [267, "-42, 7, 1", "FIX 1"],
  [268, "-42, 7, 2", "FIX 2"],
  [269, "-42, 7, 3", "FIX 3"],
  [270, "-42, 7, 4", "FIX 4"],
  [271, "-42, 7, 5", "FIX 5"],
  [272, "-42, 7, 6", "FIX 6"],
  [273, "-42, 7, 7", "FIX 7"],
  [274, "-42, 7, 8", "FIX 8"],
  [275, "-42, 7, 9", "FIX 9"],
  [276, "-42, 7,25", "FIX I"],
  [277, "-42, 8, 0", "SCI 0"],
  [278, "-42, 8, 1", "SCI 1"],
  [279, "-42, 8, 2", "SCI 2"],
  [280, "-42, 8, 3", "SCI 3"],
  [281, "-42, 8, 4", "SCI 4"],
  [282, "-42, 8, 5", "SCI 5"],
  [283, "-42, 8, 6", "SCI 6"],
  [284, "-42, 8, 7", "SCI 7"],
  [285, "-42, 8, 8", "SCI 8"],
  [286, "-42, 8, 9", "SCI 9"],
  [287, "-42, 8,25", "SCI I"],
  [288, "-42, 9, 0", "SCI 0"],
  [289, "-42, 9, 1", "SCI 1"],
  [290, "-42, 9, 2", "SCI 2"],
  [291, "-42, 9, 3", "SCI 3"],
  [292, "-42, 9, 4", "SCI 4"],
  [293, "-42, 9, 5", "SCI 5"],
  [294, "-42, 9, 6", "SCI 6"],
  [295, "-42, 9, 7", "SCI 7"],
  [296, "-42, 9, 8", "SCI 8"],
  [297, "-42, 9, 9", "SCI 9"],
  [298, "-42, 9,25", "SCI I"],
  [299, "-42,10,11", "SOLVE A"],
  [300, "-42,10,12", "SOLVE B"],
  [301, "-42,10,13", "SOLVE C"],
  [302, "-42,10,14", "SOLVE D"],
  [303, "-42,10,15", "SOLVE E"],
  [304, "-42,10, 0", "SOLVE 0"],
  [305, "-42,10, 1", "SOLVE 1"],
  [306, "-42,10, 2", "SOLVE 2"],
  [307, "-42,10, 3", "SOLVE 3"],
  [308, "-42,10, 4", "SOLVE 4"],
  [309, "-42,10, 5", "SOLVE 5"],
  [310, "-42,10, 6", "SOLVE 6"],
  [311, "-42,10, 7", "SOLVE 7"],
  [312, "-42,10, 8", "SOLVE 8"],
  [313, "-42,10, 9", "SOLVE 9"],
  [314, "-42,10, .0", "SOLVE 10"],
  [315, "-42,10, .1", "SOLVE 11"],
  [316, "-42,10, .2", "SOLVE 12"],
  [317, "-42,10, .3", "SOLVE 13"],
  [318, "-42,10, .4", "SOLVE 14"],
  [319, "-42,10, .5", "SOLVE 15"],
  [320, "-42,10, .6", "SOLVE 16"],
  [321, "-42,10, .7", "SOLVE 17"],
  [322, "-42,10, .8", "SOLVE 18"],
  [323, "-42,10, .9", "SOLVE 19"],
  [324, "-42,21, .0", "LBL 10"],
  [325, "-42,21, .1", "LBL 11"],
  [326, "-42,21, .2", "LBL 12"],
  [327, "-42,21, .3", "LBL 13"],
  [328, "-42,21, .4", "LBL 14"],
  [329, "-42,21, .5", "LBL 15"],
  [330, "-42,21, .6", "LBL 16"],
  [331, "-42,21, .7", "LBL 17"],
  [332, "-42,21, .8", "LBL 18"],
  [333, "-42,21, .9", "LBL 19"],
  [334, "- 22  .0", "GTO 10"],
  [335, "- 22  .1", "GTO 11"],
  [336, "- 22  .2", "GTO 12"],
  [337, "- 22  .3", "GTO 13"],
  [338, "- 22  .4", "GTO 14"],
  [339, "- 22  .5", "GTO 15"],
  [340, "- 22  .6", "GTO 16"],
  [341, "- 22  .7", "GTO 17"],
  [342, "- 22  .8", "GTO 18"],
  [343, "- 22  .9", "GTO 19"],
  [344, "-42, 4, 2", "x<-> 2"],
  [345, "-42, 4, 3", "x<-> 3"],
  [346, "-42, 4, 4", "x<-> 4"],
  [347, "-42, 4, 5", "x<-> 5"],
  [348, "-42, 4, 6", "x<-> 6"],
  [349, "-42, 4, 7", "x<-> 7"],
  [350, "-42, 4, 8", "x<-> 8"],
  [351, "-42, 4, 9", "x<-> 9"],
  [352, "-42, 4, .0", "x<-> 10"],
  [353, "-42, 4, .1", "x<-> 11"],
  [354, "-42, 4, .2", "x<-> 12"],
  [355, "-42, 4, .3", "x<-> 13"],
  [356, "-42, 4, .4", "x<-> 14"],
  [357, "-42, 4, .5", "x<-> 15"],
  [358, "-42, 4, .6", "x<-> 16"],
  [359, "-42, 4, .7", "x<-> 17"],
  [360, "-42, 4, .8", "x<-> 18"],
  [361, "-42, 4, .9", "x<-> 19"],
  [362, "-42, 4,11", "x<-> A"],
  [363, "-42, 4,12", "x<-> B"],
  [364, "-42, 4,13", "x<-> C"],
  [365, "-42, 4,14", "x<-> D"],
  [366, "-42, 4,15", "x<-> E"],
  [367, "-43, 4, 0", "SF 0"],
  [368, "-43, 4, 1", "SF 1"],
  [369, "-43, 4, 2", "SF 2"],
  [370, "-43, 4, 3", "SF 3"],
  [371, "-43, 4, 4", "SF 4"],
  [372, "-43, 4, 5", "SF 5"],
  [373, "-43, 4, 6", "SF 6"],
  [374, "-43, 4, 7", "SF 7"],
  [375, "-43, 4, 8", "SF 8"],
  [376, "-43, 4, 9", "SF 9"],
  [377, "-43, 4,25", "SF I"],
  [378, "-42, 5, 2", "DSE 2"],
  [379, "-42, 5, 3", "DSE 3"],
  [380, "-42, 5, 4", "DSE 4"],
  [381, "-42, 5, 5", "DSE 5"],
  [382, "-42, 5, 6", "DSE 6"],
  [383, "-42, 5, 7", "DSE 7"],
  [384, "-42, 5, 8", "DSE 8"],
  [385, "-42, 5, 9", "DSE 9"],
  [386, "-42, 5, .0", "DSE 10"],
  [387, "-42, 5, .1", "DSE 11"],
  [388, "-42, 5, .2", "DSE 12"],
  [389, "-42, 5, .3", "DSE 13"],
  [390, "-42, 5, .4", "DSE 14"],
  [391, "-42, 5, .5", "DSE 15"],
  [392, "-42, 5, .6", "DSE 16"],
  [393, "-42, 5, .7", "DSE 17"],
  [394, "-42, 5, .8", "DSE 18"],
  [395, "-42, 5, .9", "DSE 19"],
  [396, "-42, 5,11", "DSE A"],
  [397, "-42, 5,12", "DSE B"],
  [398, "-42, 5,13", "DSE C"],
  [399, "-42, 5,14", "DSE D"],
  [400, "-42, 5,15", "DSE E"],
  [401, "-43, 5, 0", "CF 0"],
  [402, "-43, 5, 1", "CF 1"],
  [403, "-43, 5, 2", "CF 2"],
  [404, "-43, 5, 3", "CF 3"],
  [405, "-43, 5, 4", "CF 4"],
  [406, "-43, 5, 5", "CF 5"],
  [407, "-43, 5, 6", "CF 6"],
  [408, "-43, 5, 7", "CF 7"],
  [409, "-43, 5, 8", "CF 8"],
  [410, "-43, 5, 9", "CF 9"],
  [411, "-43, 5,25", "CF I"],
  [412, "-42, 6, 2", "ISG 2"],
  [413, "-42, 6, 3", "ISG 3"],
  [414, "-42, 6, 4", "ISG 4"],
  [415, "-42, 6, 5", "ISG 5"],
  [416, "-42, 6, 6", "ISG 6"],
  [417, "-42, 6, 7", "ISG 7"],
  [418, "-42, 6, 8", "ISG 8"],
  [419, "-42, 6, 9", "ISG 9"],
  [420, "-42, 6, .0", "ISG 10"],
  [421, "-42, 6, .1", "ISG 11"],
  [422, "-42, 6, .2", "ISG 12"],
  [423, "-42, 6, .3", "ISG 13"],
  [424, "-42, 6, .4", "ISG 14"],
  [425, "-42, 6, .5", "ISG 15"],
  [426, "-42, 6, .6", "ISG 16"],
  [427, "-42, 6, .7", "ISG 17"],
  [428, "-42, 6, .8", "ISG 18"],
  [429, "-42, 6, .9", "ISG 19"],
  [430, "-42, 6,11", "ISG A"],
  [431, "-42, 6,12", "ISG B"],
  [432, "-42, 6,13", "ISG C"],
  [433, "-42, 6,14", "ISG D"],
  [434, "-42, 6,15", "ISG E"],
  [435, "-43, 6, 0", "F? 0"],
  [436, "-43, 6, 1", "F? 1"],
  [437, "-43, 6, 2", "F? 2"],
  [438, "-43, 6, 3", "F? 3"],
  [439, "-43, 6, 4", "F? 4"],
  [440, "-43, 6, 5", "F? 5"],
  [441, "-43, 6, 6", "F? 6"],
  [442, "-43, 6, 7", "F? 7"],
  [443, "-43, 6, 8", "F? 8"],
  [444, "-43, 6, 9", "F? 9"],
  [445, "-43, 6,25", "F? I"],
  [446, "-42,20,11", "integrate A"],
  [447, "-42,20,12", "integrate B"],
  [448, "-42,20,13", "integrate C"],
  [449, "-42,20,14", "integrate D"],
  [450, "-42,20,15", "integrate E"],
  [451, "-42,20, 0", "integrate 0"],
  [452, "-42,20, 1", "integrate 1"],
  [453, "-42,20, 2", "integrate 2"],
  [454, "-42,20, 3", "integrate 3"],
  [455, "-42,20, 4", "integrate 4"],
  [456, "-42,20, 5", "integrate 5"],
  [457, "-42,20, 6", "integrate 6"],
  [458, "-42,20, 7", "integrate 7"],
  [459, "-42,20, 8", "integrate 8"],
  [460, "-42,20, 9", "integrate 9"],
  [461, "-42,20, .0", "integrate 10"],
  [462, "-42,20, .1", "integrate 11"],
  [463, "-42,20, .2", "integrate 12"],
  [464, "-42,20, .3", "integrate 13"],
  [465, "-42,20, .4", "integrate 14"],
  [466, "-42,20, .5", "integrate 15"],
  [467, "-42,20, .6", "integrate 16"],
  [468, "-42,20, .7", "integrate 17"],
  [469, "-42,20, .8", "integrate 18"],
  [470, "-42,20, .9", "integrate 19"],
  [471, "- 32  .0", "GSB 10"],
  [472, "- 32  .1", "GSB 11"],
  [473, "- 32  .2", "GSB 12"],
  [474, "- 32  .3", "GSB 13"],
  [475, "- 32  .4", "GSB 14"],
  [476, "- 32  .5", "GSB 15"],
  [477, "- 32  .6", "GSB 16"],
  [478, "- 32  .7", "GSB 17"],
  [479, "- 32  .8", "GSB 18"],
  [480, "- 32  .9", "GSB 19"],
  [481, "u 44 11", "STO A"],
  [482, "u 44 12", "STO B"],
  [483, "u 44 13", "STO C"],
  [484, "u 44 14", "STO D"],
  [485, "u 44 15", "STO E"],
  [486, "u 44 24", "STO (i)"],
  [487, "-44,16,11", "STO MATRIX A"],
  [488, "-44,16,12", "STO MATRIX B"],
  [489, "-44,16,13", "STO MATRIX C"],
  [490, "-44,16,14", "STO MATRIX D"],
  [491, "-44,16,15", "STO MATRIX E"],
  [492, "-44,40,24", "STO + (i)"],
  [493, "-44,40,25", "STO + I"],
  [494, "-44,40, 0", "STO + 0"],
  [495, "-44,40, 1", "STO + 1"],
  [496, "-44,40, 2", "STO + 2"],
  [497, "-44,40, 3", "STO + 3"],
  [498, "-44,40, 4", "STO + 4"],
  [499, "-44,40, 5", "STO + 5"],
  [500, "-44,40, 6", "STO + 6"],
  [501, "-44,40, 7", "STO + 7"],
  [502, "-44,40, 8", "STO + 8"],
  [503, "-44,40, 9", "STO + 9"],
  [504, "-44,40, .0", "STO + 10"],
  [505, "-44,40, .1", "STO + 11"],
  [506, "-44,40, .2", "STO + 12"],
  [507, "-44,40, .3", "STO + 13"],
  [508, "-44,40, .4", "STO + 14"],
  [509, "-44,40, .5", "STO + 15"],
  [510, "-44,40, .6", "STO + 16"],
  [511, "-44,40, .7", "STO + 17"],
  [512, "-44,40, .8", "STO + 18"],
  [513, "-44,40, .9", "STO + 19"],
  [514, "-44,40,11", "STO + A"],
  [515, "-44,40,12", "STO + B"],
  [516, "-44,40,13", "STO + C"],
  [517, "-44,40,14", "STO + D"],
  [518, "-44,40,15", "STO + E"],
  [519, "-44,30,24", "STO - (i)"],
  [520, "-44,30,25", "STO - I"],
  [521, "-44,30, 0", "STO - 0"],
  [522, "-44,30, 1", "STO - 1"],
  [523, "-44,30, 2", "STO - 2"],
  [524, "-44,30, 3", "STO - 3"],
  [525, "-44,30, 4", "STO - 4"],
  [526, "-44,30, 5", "STO - 5"],
  [527, "-44,30, 6", "STO - 6"],
  [528, "-44,30, 7", "STO - 7"],
  [529, "-44,30, 8", "STO - 8"],
  [530, "-44,30, 9", "STO - 9"],
  [531, "-44,30, .0", "STO - 10"],
  [532, "-44,30, .1", "STO - 11"],
  [533, "-44,30, .2", "STO - 12"],
  [534, "-44,30, .3", "STO - 13"],
  [535, "-44,30, .4", "STO - 14"],
  [536, "-44,30, .5", "STO - 15"],
  [537, "-44,30, .6", "STO - 16"],
  [538, "-44,30, .7", "STO - 17"],
  [539, "-44,30, .8", "STO - 18"],
  [540, "-44,30, .9", "STO - 19"],
  [541, "-44,30,11", "STO - A"],
  [542, "-44,30,12", "STO - B"],
  [543, "-44,30,13", "STO - C"],
  [544, "-44,30,14", "STO - D"],
  [545, "-44,30,15", "STO - E"],
  [546, "-44,20,24", "STO * (i)"],
  [547, "-44,20,25", "STO * I"],
  [548, "-44,20, 0", "STO * 0"],
  [549, "-44,20, 1", "STO * 1"],
  [550, "-44,20, 2", "STO * 2"],
  [551, "-44,20, 3", "STO * 3"],
  [552, "-44,20, 4", "STO * 4"],
  [553, "-44,20, 5", "STO * 5"],
  [554, "-44,20, 6", "STO * 6"],
  [555, "-44,20, 7", "STO * 7"],
  [556, "-44,20, 8", "STO * 8"],
  [557, "-44,20, 9", "STO * 9"],
  [558, "-44,20, .0", "STO * 10"],
  [559, "-44,20, .1", "STO * 11"],
  [560, "-44,20, .2", "STO * 12"],
  [561, "-44,20, .3", "STO * 13"],
  [562, "-44,20, .4", "STO * 14"],
  [563, "-44,20, .5", "STO * 15"],
  [564, "-44,20, .6", "STO * 16"],
  [565, "-44,20, .7", "STO * 17"],
  [566, "-44,20, .8", "STO * 18"],
  [567, "-44,20, .9", "STO * 19"],
  [568, "-44,20,11", "STO * A"],
  [569, "-44,20,12", "STO * B"],
  [570, "-44,20,13", "STO * C"],
  [571, "-44,20,14", "STO * D"],
  [572, "-44,20,15", "STO * E"],
  [573, "-44,10,24", "STO / (i)"],
  [574, "-44,10,25", "STO / I"],
  [575, "-44,10, 0", "STO / 0"],
  [576, "-44,10, 1", "STO / 1"],
  [577, "-44,10, 2", "STO / 2"],
  [578, "-44,10, 3", "STO / 3"],
  [579, "-44,10, 4", "STO / 4"],
  [580, "-44,10, 5", "STO / 5"],
  [581, "-44,10, 6", "STO / 6"],
  [582, "-44,10, 7", "STO / 7"],
  [583, "-44,10, 8", "STO / 8"],
  [584, "-44,10, 9", "STO / 9"],
  [585, "-44,10, .0", "STO / 10"],
  [586, "-44,10, .1", "STO / 11"],
  [587, "-44,10, .2", "STO / 12"],
  [588, "-44,10, .3", "STO / 13"],
  [589, "-44,10, .4", "STO / 14"],
  [590, "-44,10, .5", "STO / 15"],
  [591, "-44,10, .6", "STO / 16"],
  [592, "-44,10, .7", "STO / 17"],
  [593, "-44,10, .8", "STO / 18"],
  [594, "-44,10, .9", "STO / 19"],
  [595, "-44,10,11", "STO / A"],
  [596, "-44,10,12", "STO / B"],
  [597, "-44,10,13", "STO / C"],
  [598, "-44,10,14", "STO / D"],
  [599, "-44,10,15", "STO / E"],
  [600, "- 44,43,24", "STO g (i)"],
  [601, "u 45 11", "RCL A"],
  [602, "u 45 12", "RCL B"],
  [603, "u 45 13", "RCL C"],
  [604, "u 45 14", "RCL D"],
  [605, "u 45 15", "RCL E"],
  [606, "u 45 24", "RCL (i)"],
  [607, "-45,40,24", "RCL + (i)"],
  [608, "-45,40,25", "RCL + I"],
  [609, "-45,40, 0", "RCL + 0"],
  [610, "-45,40, 1", "RCL + 1"],
  [611, "-45,40, 2", "RCL + 2"],
  [612, "-45,40, 3", "RCL + 3"],
  [613, "-45,40, 4", "RCL + 4"],
  [614, "-45,40, 5", "RCL + 5"],
  [615, "-45,40, 6", "RCL + 6"],
  [616, "-45,40, 7", "RCL + 7"],
  [617, "-45,40, 8", "RCL + 8"],
  [618, "-45,40, 9", "RCL + 9"],
  [619, "-45,40, .0", "RCL + 10"],
  [620, "-45,40, .1", "RCL + 11"],
  [621, "-45,40, .2", "RCL + 12"],
  [622, "-45,40, .3", "RCL + 13"],
  [623, "-45,40, .4", "RCL + 14"],
  [624, "-45,40, .5", "RCL + 15"],
  [625, "-45,40, .6", "RCL + 16"],
  [626, "-45,40, .7", "RCL + 17"],
  [627, "-45,40, .8", "RCL + 18"],
  [628, "-45,40, .9", "RCL + 19"],
  [629, "-45,40,11", "RCL + A"],
  [630, "-45,40,12", "RCL + B"],
  [631, "-45,40,13", "RCL + C"],
  [632, "-45,40,14", "RCL + D"],
  [633, "-45,40,15", "RCL + E"],
  [634, "-45,30,24", "RCL - (i)"],
  [635, "-45,30,25", "RCL - I"],
  [636, "-45,30, 0", "RCL - 0"],
  [637, "-45,30, 1", "RCL - 1"],
  [638, "-45,30, 2", "RCL - 2"],
  [639, "-45,30, 3", "RCL - 3"],
  [640, "-45,30, 4", "RCL - 4"],
  [641, "-45,30, 5", "RCL - 5"],
  [642, "-45,30, 6", "RCL - 6"],
  [643, "-45,30, 7", "RCL - 7"],
  [644, "-45,30, 8", "RCL - 8"],
  [645, "-45,30, 9", "RCL - 9"],
  [646, "-45,30, .0", "RCL - 10"],
  [647, "-45,30, .1", "RCL - 11"],
  [648, "-45,30, .2", "RCL - 12"],
  [649, "-45,30, .3", "RCL - 13"],
  [650, "-45,30, .4", "RCL - 14"],
  [651, "-45,30, .5", "RCL - 15"],
  [652, "-45,30, .6", "RCL - 16"],
  [653, "-45,30, .7", "RCL - 17"],
  [654, "-45,30, .8", "RCL - 18"],
  [655, "-45,30, .9", "RCL - 19"],
  [656, "-45,30,11", "RCL - A"],
  [657, "-45,30,12", "RCL - B"],
  [658, "-45,30,13", "RCL - C"],
  [659, "-45,30,14", "RCL - D"],
  [660, "-45,30,15", "RCL - E"],
  [661, "-45,20,24", "RCL * (i)"],
  [662, "-45,20,25", "RCL * I"],
  [663, "-45,20, 0", "RCL * 0"],
  [664, "-45,20, 1", "RCL * 1"],
  [665, "-45,20, 2", "RCL * 2"],
  [666, "-45,20, 3", "RCL * 3"],
  [667, "-45,20, 4", "RCL * 4"],
  [668, "-45,20, 5", "RCL * 5"],
  [669, "-45,20, 6", "RCL * 6"],
  [670, "-45,20, 7", "RCL * 7"],
  [671, "-45,20, 8", "RCL * 8"],
  [672, "-45,20, 9", "RCL * 9"],
  [673, "-45,20, .0", "RCL * 10"],
  [674, "-45,20, .1", "RCL * 11"],
  [675, "-45,20, .2", "RCL * 12"],
  [676, "-45,20, .3", "RCL * 13"],
  [677, "-45,20, .4", "RCL * 14"],
  [678, "-45,20, .5", "RCL * 15"],
  [679, "-45,20, .6", "RCL * 16"],
  [680, "-45,20, .7", "RCL * 17"],
  [681, "-45,20, .8", "RCL * 18"],
  [682, "-45,20, .9", "RCL * 19"],
  [683, "-45,20,11", "RCL * A"],
  [684, "-45,20,12", "RCL * B"],
  [685, "-45,20,13", "RCL * C"],
  [686, "-45,20,14", "RCL * D"],
  [687, "-45,20,15", "RCL * E"],
  [688, "-45,10,24", "RCL / (i)"],
  [689, "-45,10,25", "RCL / I"],
  [690, "-45,10, 0", "RCL / 0"],
  [691, "-45,10, 1", "RCL / 1"],
  [692, "-45,10, 2", "RCL / 2"],
  [693, "-45,10, 3", "RCL / 3"],
  [694, "-45,10, 4", "RCL / 4"],
  [695, "-45,10, 5", "RCL / 5"],
  [696, "-45,10, 6", "RCL / 6"],
  [697, "-45,10, 7", "RCL / 7"],
  [698, "-45,10, 8", "RCL / 8"],
  [699, "-45,10, 9", "RCL / 9"],
  [700, "-45,10, .0", "RCL / 10"],
  [701, "-45,10, .1", "RCL / 11"],
  [702, "-45,10, .2", "RCL / 12"],
  [703, "-45,10, .3", "RCL / 13"],
  [704, "-45,10, .4", "RCL / 14"],
  [705, "-45,10, .5", "RCL / 15"],
  [706, "-45,10, .6", "RCL / 16"],
  [707, "-45,10, .7", "RCL / 17"],
  [708, "-45,10, .8", "RCL / 18"],
  [709, "-45,10, .9", "RCL / 19"],
  [710, "-45,10,11", "RCL / A"],
  [711, "-45,10,12", "RCL / B"],
  [712, "-45,10,13", "RCL / C"],
  [713, "-45,10,14", "RCL / D"],
  [714, "-45,10,15", "RCL / E"],
  [715, "- 45,43,24", "RCL g (i)"]
];
// NOTE:  I made the following changes
//
//   The STO/RCL +/-/*/divide buttons were listed like this:
//        45_40_48_(0-9)  (rcl + dot #)
//   I changed this to:
//        45_40_.[0-9]   (rcl + .#)
//   This is how the 15 C displays this "45,40, .2".  jrpn15c.com displays
//   it as "45,40,12" instead
///
/// Expand the (limited) regex syntax used in SEQ_2_CODE.  _48_ becomes dot
/// ("_.") -- For, say, sto + 15, the 15C displays it as "44,40, .5", whereas
/// Thorsten's displays it as "44,40,15, and represents it in SEQ_TO_CODE
/// as "44_40_48_(0-9)".
//   @@ TODO:  Translate for import/export
List<String> expand(String regex) {
  bool paren = false;
  regex = regex.replaceFirst('_48_', '_.');
  final prefix = StringBuffer();
  int i;
  for (i = 0; i < regex.length; i++) {
    final ch = regex.codeUnitAt(i);
    if (ch == '('.codeUnitAt(0)) {
      paren = true;
    } else if (ch == '['.codeUnitAt(0)) {
      i++;
      break;
    } else {
      prefix.writeCharCode(ch);
    }
  }
  if (i == regex.length) {
    return [prefix.toString()];
  }
  final result = <String>[];
  final start = regex.codeUnitAt(i++);
  if (regex.codeUnitAt(i++) != '-'.codeUnitAt(0)) {
    throw "error";
  }
  final end = regex.codeUnitAt(i++);
  for (int j = start; j <= end; j++) {
    result.add(prefix.toString() + String.fromCharCode(j));
  }
  if (regex.codeUnitAt(i++) != ']'.codeUnitAt(0)) {
    throw "error";
  }
  if (paren && regex.codeUnitAt(i++) != ')'.codeUnitAt(0)) {
    throw "error";
  }
  if (i == regex.length) {
    return result;
  }
  final postfix = StringBuffer();
  for (; i < regex.length; i++) {
    postfix.writeCharCode(regex.codeUnitAt(i));
  }
  for (int j = 0; j < result.length; j++) {
    result[j] = result[j] + postfix.toString();
  }
  return result;
}

//
Map<String, String> tclDisplayToOpcode() {
  final result = <String, String>{};
  int num = 0;
  for (final entry in SEQ_2_CODE) {
    final opcodes = expand(entry[1]);
    if (opcodes.length == 1 && opcodes[0] == '""') {
      continue;
    }
    final display = expand(entry[0]);
    if (opcodes.length != display.length) {
      throw 'Oopsie!  $display $opcodes';
    }
    for (int i = 0; i < opcodes.length; i++) {
      if (result[display[i]] != null) {
        throw 'Oopsie!  ${display[i]} already present';
      }
      result[display[i]] = opcodes[i];
    }
  }
  return result;
}

Future<void> opcodeTest15C() async {
  final c = TestCalculator(for15C: true);
  final instructions = c.model.memory.program.getAllInstructionsForTesting();
  final tcl = tclDisplayToOpcode();
  final seen = <String>{};
  for (final instr in instructions) {
    String pd = instr.programDisplay.replaceFirst('-', '').trim();
    while (pd.contains('  ')) {
      pd = pd.replaceFirst('  ', ' ');
    }
    if (pd.contains(',')) {
      pd = pd.replaceAll(',', '_').replaceAll(' ', '');
    } else {
      pd = pd.replaceAll(' ', '_');
    }
    if (pd.startsWith('u_')) {
      pd = '${pd.substring(2)}_u';
    }
    expect(seen.add(pd), true, reason: '$pd previously seen');
    final tclOpcode = tcl.remove(pd);
    expect(tclOpcode == null, false);
    if (instr.opcode <= 0xff) {
      expect(tclOpcode!.length, 2,
          reason: '$instr ($tclOpcode, '
              '0x${instr.opcode.toRadixString(16)}) should be two bytes');
    } else {
      expect(tclOpcode!.length, 4,
          reason: '$instr ($tclOpcode, '
              '0x${instr.opcode.toRadixString(16)}) should be one byte');
    }
  }
  tcl.remove('44_42_36'); // Synonym for 44_36, sto-random
  final undead = tcl.keys.toList()..sort();
  for (final t in undead) {
    print('$t is undead');
  }
  expect(tcl.length, 0);

  // Make sure the opcodes don't move between releases
  final currentOpcodes = instructions
      .map<List<Object>>((instr) =>
          <Object>[instr.opcode, instr.programDisplay, instr.programListing])
      .toList();
  // An easy way to generate expectedOpcodes:
  // print(JsonEncoder().convert(currentOpcodes));
  expect(currentOpcodes.length, expectedOpcodes.length);
  for (int i = 0; i < expectedOpcodes.length; i++) {
    final c = currentOpcodes[i];
    final e = expectedOpcodes[i];
    expect(c[0], e[0]);
    expect(c[1], e[1]);
    expect(c[2], e[2]);  // Cosmetic, but possibly helpful to know
    // If this fails, it's easy enough to comment it out, re-run the test
    // to make sure nothing important has changed, and then re-generate
    // expectedOpcodes.
  }
}
